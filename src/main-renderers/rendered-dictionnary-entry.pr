{*

Injectable blueprint that represents full token as an object.

Source data: Token Metadata and Payload, all types (https://developers.supernova.io/design-system-data/tokens)
Note: Token is passed as `context` property because it is injected

{
  "context": {
    "id": string
    "name": string
    "description": string
    "tokenType": Depends on the token type
    "origin": ItemOrigin | null
    "value": Depends on the token type
  }
}


Rendered as:

  {
    name: string,
    type: string,
    description: string,
    value: string,
    key: value pairs according to the various tokens types
  };

*}
    {
{[ let token = context /]}
        name: '{[ inject "rendered-name" context token /]}',
        type: '{{ token.tokenType }}',
        description: `{{ token.description }}`,
        {[ inject "rendered-value-detailed" context token /]}

    },